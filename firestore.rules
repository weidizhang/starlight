rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{user} {
      function isUserAllowedToRead() {
        return true; // TODO: Needs implementation :)
      }

      function isUserAllowedToCreate() {
        return request.auth != null
          && request.resource.data.uid == request.auth.uid;
      }

      function isSenderBalanceUpdate() {
        // TODO: Validate balances using tx doc.
        let txId = request.resource.data.lastTxId;
        let tx = /databases/$(database)/documents/transactions/$(txId);
        return request.auth != null
          && resource.data.lastTxId != txId
          && request.auth.uid == resource.data.uid
          && resource.data.uid == getAfter(tx).data.fromUid;
      }

      function isRecipientBalanceUpdate() {
        // TODO: Validate balances using tx doc.
        let txId = request.resource.data.lastTxId;
        let tx = /databases/$(database)/documents/transactions/$(txId);
        return request.auth != null
          && resource.data.lastTxId != txId
          && request.auth.uid != resource.data.uid
          && resource.data.uid == getAfter(tx).data.toUid;
      }

      allow read: if isUserAllowedToRead();
      allow create: if isUserAllowedToCreate();
      allow update: if isSenderBalanceUpdate() || isRecipientBalanceUpdate();
      allow delete: if false;
    }
    match /transactions/{transaction} {
      function userIsSenderFutureDoc() {
        return request.auth != null && request.resource.data.fromUid == request.auth.uid;
      }

      function userIsSenderExistingDoc() {
        return request.auth != null && resource.data.fromUid == request.auth.uid;
      }

      function userIsReceiverExistingDoc() {
        return request.auth != null && resource.data.toUid == request.auth.uid;
      }

      function isSendFundsTxValid() {
        // TODO: Requires more validations on amount.
        let sender = /databases/$(database)/documents/users/$(request.resource.data.fromUsername);
        let recipient = /databases/$(database)/documents/users/$(request.resource.data.toUsername);
        return userIsSenderFutureDoc()
          && request.resource.data.toUid != request.resource.data.fromUid
          && request.resource.data.amountCents > 0
          && get(recipient).data.uid == request.resource.data.toUid
          && get(sender).data.uid == request.resource.data.fromUid;
      }

      allow read: if userIsSenderExistingDoc() || userIsReceiverExistingDoc();
      allow create: if isSendFundsTxValid();
      allow update: if false;
      allow delete: if false;
    }
  }
}